DOCUMENTATION V1.0 / JULY 2018

Clamscan
========

Config.ini
-----------
This is where the default values used to run the scan are stored. It consists of:
X-Auth-Token - The token assigned to a user from Carbon Black in order to access the API. For more info, check https://developer.carbonblack.com/reference/enterprise-protection/authentication
Quarantine - The quarantine directory. If the directory does not exist, it will be created the next time the program runs
Virus Database - The name of the virus signature database created from the Carbon Black query, used by clamAV. Must have .hdb extension
Old Databases - Not used. The directory to store old virus databases
Log File: Temporary log file created from the clamscan. Will be deleted during program execution
Home Directory - Not used
Quarantine Database - The location of the database of quarantined files. If the database does not exist, it will be created the next time the program runs
Credential File - The location of the file containing credentials used to mount filesystems. Must be absolute path to file

cifs.cred
----------
This is where the credentials used to mount the filesystems are located. It contains username and password fields, and is permissioned so that only the root user can read it

lastrun.log
-----------
A log file that keeps track of the last time a scan was run, in seconds. If no log file is found, or the file is empty, the scan defaults to 1 day.

computer.py
-----------
The definition file for the Computer class. Has the following instance variables:
comp_path - The path of the file system to be mounted
credentials - The file containing the credentials used to mount the drive (cifs.cred)
mount_point - The local path where the comp_path is mounted. Defaults to /mnt/infected

Contains the following methods:

	mount()
	+++++++
	Uses instance variables comp_path, mount_point, and credentials. Mounts the comp_path to the mount_point using the supplied credentials.

	unmount()
	+++++++++
	Uses instance variable mount_point. Unmounts the mounted filesystem.

For more details, view the comments in the source code.

infectedcomputer.py
-------------------
The definition file for the InfectedComputer class. Inherits from Computer. Has the following additional instance variables:
db - The location of the virus signature database used by clamAV
quarantine - The location of the quarantine directory
log_file - The temporary log file generated by the clamscan
quarantine_db - The location of the database of quarantined files. Used to keep track of where the files came from so they can be returned if needed.

Contains the following methods:

	scan()
	++++++
	Uses instance variables mount_point, quarantine, log_file, and db. If no quarantine folder is found, it will create one in the location specified in config.ini with permissions chmod 664.
	It will then run a non-recursive clamscan of the filesystem located at mount_point using the virus signatures found in db, move any detections to quarantine, and output the results to
	log_file.

	log_detections()
	++++++++++++++++
	Uses instance variable log_file. Converts the output from the clamscan to something useable by python.

	rename_quarantine()
	+++++++++++++++++++
	Gives all quarantined files a unique extension to avoid overwrite of files with the same name, in the form of filename.XXXX.quarantine where XXXX is a randomly-generated 4 digit
	hexadecimal ID.

	leave_txt()
	+++++++++++
	Uses instance variable mount_point. Replaces quarantined file with a .txt file containing contact information.

	write_to_quarantine_db()
	++++++++++++++++++++++++
	Uses instance variable quarantine_db. Writes the quarantined files original location to a database, so that false positives can be returned.

For more details, view the comments in the source code.

db_ops.py
---------
Collection of miscellaneous utility functions not tied to any particular class. Contains the following methods:

	build_virus_db(token, db_name, seconds)
	++++++++++++++++
	:param token: The API token designated by carbon black
	:param db_name: The path where the virus database to be used by clamAV will be saved
	:param seconds: How many seconds in the past to query Carbon Black
	:returns df_loc: A dataframe containing the paths of all files to be quarantined 
 	
	Sends a get request to Carbon Black for all files marked as potential risks. Uses token from config.ini to authenticate request, and 
	only returns files created in the last seconds seconds (seconds is the variable name). If any files are found, a dataframe of file locations is built, and a separate dataframe of 
	file hashes is built. These are then filtered for duplicates, and the file hash database is converted into a format readable by clamAV. Lastly, the location dataframe is returned
	to the caller.

	build_quarantine_db(quarantine_db)
	+++++++++++++++++++++
	:param quarantine_db: The path where the quarantine database will be saved

	Builds a new database at quarantine_db containing the original locations of quarantined files.

	return_file(quarantine_db, credentials, filepath)
	+++++++++++++
	:param quarantine_db: The path where the quarantine database will be saved
	:param credentials: The credential file containing the username and password used to mount file systems
	:param filepath: The path of the file system to be mounted
	:returns sha_sum: The sha256 hash of the returned file	

	Searches quarantine_db for any files that closely match filepath, and returns them as a list. The user may then select 
	the desired file to be returned, and confirm whether or not they want to move it from quarantine. If confirmed, the original file location will be mounted, and the file moved from
	quarantine to its original location. If the text file that was left earlier is still present, it will be deleted. Returns the sha256 hash value of the returned file.

	sha256sum(filepath)
	+++++++++++
	:param filepath: The path of the file to be hashed

	Calculates and returns the sha256 hash value of the file located at filepath.

	approve_file(token, file_hash)
	++++++++++++++
	:param token: The API token designated by carbon black
	:param file_hash: The sha256 hash value of the file to be locally approved

	Queries Carbon Black for all files with hash values that match file_hash using token to authenticate. Then sends a put request to locally approve
	these files.

scan_computers.py
------------------
Script used to run scans of computers with potential risk files on them. Can be called directly like so: sudo python3 scan_computers.py -s [seconds]
The -s switch allows the user to specify how old potential risk files can be. If no argument is given, the default is 86400 (1 day).

return_file.py
--------------
Script used to return a false positive from quarantine to the user's computer, and locally approve matching file hashes. Can be called directly like so: sudo python3 return_file.py [file]
The specified file will be searched for in the database, and all closely matching files will be displayed. If left blank, all files in the database will be displayed.

00-clamscan.conf
----------------
This file is located in the /etc/rsyslog.d directory. It is responsible for configuring rsyslog to push all clamscan related syslog messages to the splunk server located at the ip address specified in this file.
